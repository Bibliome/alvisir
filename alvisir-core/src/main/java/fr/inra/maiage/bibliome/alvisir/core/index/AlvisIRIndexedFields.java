package fr.inra.maiage.bibliome.alvisir.core.index;

import java.util.Iterator;
import java.util.List;

/**
 * Field generator.
 * @author rbossy
 *
 * @param <F> Field object type.
 * @param <T> Token object type.
 * @param <R> Fragment object type.
 */
public interface AlvisIRIndexedFields<F,T,R> {
	/**
	 * Returns the fields to be indexed.
	 * @return the fields to be indexed.
	 */
	Iterator<F> getFieldInstances();
	
	/**
	 * Returns the name of the specified field.
	 * @param field field.
	 * @return the name of the specified field.
	 */
	String getFieldName(F field);
	
	/**
	 * Returns the contents value of the specified field.
	 * @param field field.
	 * @return the contents value of the specified field.
	 */
	String getFieldValue(F field);
	
	/**
	 * Returns the token generator for the specified field.
	 * @param field field.
	 * @return the token generator for the specified field.
	 */
	AlvisIRIndexedTokens<T,R> getIndexedTokens(F field);
	
	/**
	 * Returns the annotation generators for the specified field.
	 * @param field field.
	 * @return the annotation generators for the specified field.
	 */
	List<AlvisIRIndexedTokens<T,R>> getIndexedAnnotations(F field);
	
	/**
	 * Returns the token normalization options for fields generated by this generator.
	 * @return
	 */
	NormalizationOptions getNormalizationOptions();
}
